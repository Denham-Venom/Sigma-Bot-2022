// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

package frc.lib.tempDenhamAutoStuff;

import java.util.List;
import java.util.function.Supplier;

import edu.wpi.first.math.geometry.Pose2d;
import edu.wpi.first.math.geometry.Rotation2d;
import edu.wpi.first.wpilibj.Timer;

/** 
 * This class is intended to have instances generated by 
 * SwerveCommandRotation2dSupplierGenerator.generateSwerveCommandRotation2dSupplier.
 * It is used to track the duration of an autonomous 
 * command and supply a corresponding target orientation 
 * given the waypoints the path intends to follow.
 */
public class SwerveAngleSupplier implements Supplier<Rotation2d> {

    private boolean timerStarted = false;
    private Timer timer;
    private List<Double> times;
    private List<Pose2d> pts;
    private int numTimes;

    /**
     * Instantiate a new SwerveAngleSupplier with a list of 
     * Pose2d trajectory waypoints, and a corresponding list 
     * of times the waypoints occur at.
     * @param times List<Double> containing times at which 
     * the waypoints occur.
     * @param waypoints Waypoints used to get robot orientations.
     */
    public SwerveAngleSupplier(List<Double> times, List<Pose2d> waypoints) {
      this.timer = new Timer();
      this.times = times;
      this.pts = waypoints;
      this.numTimes = times.size();
    }

    @Override
    public Rotation2d get() {
      int i = 0;
      if(!timerStarted) {
          timer.reset();
          timer.start();
          timerStarted = true;
      }
      double curTime = timer.get();
      while(curTime >= times.get(i)) {
        i++;
        if(i >= numTimes) {
          i = numTimes-1;
          break;
        }
      }
      return pts.get(i).getRotation();
    }
}
